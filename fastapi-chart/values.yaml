# Add this to your values.yaml, values.dev.yaml, and values.prod.yaml

# Sealed Secrets Configuration
sealedSecrets:
  enabled: false  # Set to true when you have sealed secrets
  # The encryptedData will be populated by running the sealed-secret-demo.sh script
  # or you can manually paste encrypted values here
  encryptedData: {}
    # Example (these are encrypted values, safe to commit):
    # USERNAME: AgBX8V9k...encrypted-data...
    # PASSWORD: AgCY2Mk...encrypted-data...
    # API_KEY: AgDZ3Nl...encrypted-data...

# If you want to use the sealed secrets in your deployment, add this:
# In your deployment.yaml template, reference the secret like this:
# env:
#   - name: DB_USERNAME
#     valueFrom:
#       secretKeyRef:
#         name: {{ include "fastapi-chart.fullname" . }}-sealed-secret
#         key: USERNAME
#   - name: DB_PASSWORD
#     valueFrom:
#       secretKeyRef:
#         name: {{ include "fastapi-chart.fullname" . }}-sealed-secret
#         key: PASSWORD
service:
  type: ClusterIP   # or NodePort / LoadBalancer
  port: 80          # target port inside the service

ingress:
  enabled: false        # default false
  hosts:
    - host: fastapi.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

image:
  repository: myusername/fastapi-demo      # <-- required!
  tag: "0.1.0"
  pullPolicy: IfNotPresent

# Optional probes
livenessProbe:
  httpGet:
    path: /health
    port: 8000
readinessProbe:
  httpGet:
    path: /ready
    port: 8000

# SealedSecrets example
sealedSecrets:
  enabled: false
  encryptedData: {}